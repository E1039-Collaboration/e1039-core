#ifndef _ONL_MON_TRIG_V1495__H_
#define _ONL_MON_TRIG_V1495__H_
#include <rs_Reader/rs_Reader.h>
#include <interface_main/SQEvent.h>
#include <interface_main/SQHitVector.h>
#include "OnlMonClient.h"

class OnlMonTrigV1495: public OnlMonClient {
 public:
  typedef enum { H1X, H2X, H3X, H4X, H1Y, H2Y, H4Y1, H4Y2 } HodoType_t;
  static const int N_DET = 8;

 private:
  rs_Reader * rs_top_cosmic;
  rs_Reader * rs_bot_cosmic;


  HodoType_t m_type;
  int m_lvl;
  std::string list_det_name[N_DET];
  int         list_det_id  [N_DET];

  TH1* h1_rs_top[2];
  TH1* h1_rs_bot[2];
  
  TH1* h1_trig;
  TH2* h2_trig_time;

  TH2* h2_time_ele_raw[N_DET];
  TH2* h2_time_ele_fpga[N_DET];
 
  TH1* count_proj[8];
  TLine* proj_line[8];
  TLine* proj_line_H1[8];
  
  TH2* h2_RF;
  TH2* h2_RF_raw;
  TH2* h2_phase;
  TH1* h1_phase;
 public:
  OnlMonTrigV1495(); //const int lvl);
  virtual ~OnlMonTrigV1495() {}
  OnlMonClient* Clone() { return new OnlMonTrigV1495(*this); }

  int InitOnlMon(PHCompositeNode *topNode);
  int InitRunOnlMon(PHCompositeNode *topNode);
  int ProcessEventOnlMon(PHCompositeNode *topNode);
  int EndOnlMon(PHCompositeNode *topNode);
  int FindAllMonHist();
  int DrawMonitor();

 private:
  void SetDet();
  void RoadHits(vector<SQHit*>* H1X, vector<SQHit*>* H2X, vector<SQHit*>* H3X, vector<SQHit*>* H4X,rs_Reader* rs_obj, TH1* hist);
};

#endif /* _ONL_MON_TRIG_V1495__H_ */
